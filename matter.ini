#*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*
#*  CLASS input parameter file for the FFTlog branch *
#*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*

#> You might be worried that the FFTlog method seems awfully slow compared to the original class when first running this file. Don't worry, this is only because for your convenience, the old method is not actually doing any nCl/sCl calculation, ONLY the CMB. For further info, look at point 20.
#> This example of input file does not include all CLASS possibilities, but only the most useful ones for running in the FFTlog branch. For all possibilities, consider looking at the longer 'explanatory.ini' file (which does not include FFTlog parameters as of this moment).
#> Only lines containing an equal sign not preceded by a sharp sign "#" are considered by the code. Hence, do not write an equal sign within a comment, the whole line would be interpreted as relevant input.
#> Input files must have an extension ".ini".

## 1) Hubble parameter : either 'H0' in km/s/Mpc or 'h'
#H0 = 72.
h = 0.6711
#100*theta_s = 1.0334

## 2) photon density: either 'T_cmb' in K or 'Omega_g' or 'omega_g'
T_cmb = 2.726
#Omega_g = 5.050601e-05
#omega_g = 2.47479449e-5

## 3) baryon density: either 'Omega_b' or 'omega_b'
#Omega_b = 0.05
#omega_b = 0.0266691
omega_b = 0.02207

## 4) ultra-relativistic species / massless neutrino density: either 'N_eff' or 'Omega_ur' or 'omega_ur'
#N_eff = 3.04
#Omega_ur = 3.4869665e-05
#omega_ur = 1.70861334e-5

## 5) density of cdm (cold dark matter): 'Omega_cdm' or 'omega_cdm'
#Omega_cdm = 0.25
omega_cdm = 0.12029

## 6) Additional species such as a cosmological constant Lambda, a fluid (fld)
#Omega_Lambda = 0.7
# Omega_fld = 0

## 7) Non-cold Dark Matter (usually neutrinos)
#N_ncdm = 1
#m_ncdm = 0.33
#deg_ncdm = 3

## 8) Reionization time/optical depth
z_reio = 10.
#tau_reio = 0.084522


## 9) List of output spectra ('tCl' for temperature Cls, 'pCl' for polarization CLs, 'lCl' for lensing potential Cls, 'dCl' for matter density Cls, 'sCl' for galaxy lensing Cl's, 'mPk' for total matter power spectrum P(k), 'mTk' for matter transfer functions). Note, that 'dCl' == galaxy-galaxy correlation, 'sCl' == shear-shear correlation, up to factors of (l(l+1))^2/4 which are described in the output file, and if you activate both, you also get galaxy-shear correlation

output = tCl, dCl, sCl
#output = tCl,pCl,lCl,mPk,dCl,sCl
#output = dCl,sCl
#output = mPk,mTk

## 10) If you want lensed CMB, do you want non-linear power spectra
#lensing = yes
#non linear=halofit
non linear=no

## 11) Primordial power spectrum
k_pivot = 0.05
A_s = 2.21536e-9
n_s = 0.97
alpha_s = 0.

## 12) Output l values CMB up to...
l_max_scalars = 3000
#l_max_tensors = 300

## 13) Maximum l of LSS observables
#l_max_lss = 5000
#l_max_lss = 3000
l_max_lss = 1000
#l_max_lss = 300

## 14) Output of P(k) up to k,z = ...
P_k_max_h/Mpc = 100.0
#P_k_max_h/Mpc = 1.0
z_pk = 0
#z_pk = 0., 1.2, 3.5
#z_max_pk = 4.0

## 15) Window function type, mean values, widths, biases
selection= gaussian
#selection_cut_at_sigma = 5 #For gaussian: After how many sigmas do you consider the window function to be negligably small
#selection = tophat
#selection_tophat_edge = 0.5 #For tophat: The width of the tanh(x/width) function
#selection = dirac

selection_mean =  1.0,1.25,2.0,3.5
selection_width = 0.05,0.05,0.3,0.3
selection_bias = 1.0,1.12,1.41,1.87

## 16) Number of non-diagonal elements (-1 = all)
non_diagonal = -1
#non_diagonal = 2

## 17) Measurement quantities
# Wants to take into account dN/dz ?
has_dN_dz_analytic = no
# Wants photo-z error?
N_photo_z = 1000

## 18) Number count contributions
#number count contributions = density, rsd, lensing, gr

number count contributions = density, rsd, lensing
#number count contributions = density, rsd, gr
#number count contributions = density, lensing, gr
#number count contributions = rsd, lensing, gr

#number count contributions = gr, lensing
#number count contributions = rsd, gr
#number count contributions = rsd, lensing
#number count contributions = density, gr
#number count contributions = density, lensing
#number count contributions = density, rsd

#number count contributions = gr
#number count contributions = density
#number count contributions = rsd
#number count contributions = lensing



## 19) Precision parameters for the original class
# k density for large k (larger = more precise)
#k_per_decade_for_pk = 500
# k stepsize for small k (smaller = more precise)
#k_per_decade = 1
#k_step_super = 0.5
#k_step_sub = 0.5
# Time sampling in perturbations module (smaller = more precise)
#perturb sampling stepsize = 0.0001
# Limber switches for activating/deactivating Limber approximation (at l/z = switch)
l_switch_limber_for_nc_local_over_z = 100000  # Off
l_switch_limber_for_nc_los_over_z = 100000    # Off
#l_switch_limber_for_nc_local_over_z=1050.0    # On, only at large l
#l_switch_limber_for_nc_los_over_z = 1050.0    # On, only at large l
#l_switch_limber_for_nc_local_over_z = 0.0      # On always
#l_switch_limber_for_nc_los_over_z = 0.0        # On always
# maximum k for CMB/LSS (Very important! In units of tau0/lmax)
#k_max_tau0_over_l_max_lss = 800.0
k_max_tau0_over_l_max_lss = 24
k_max_tau0_over_l_max_cmb = 2.4
# Sampling density for bessel functions (Very important!)
#hyper_sampling_flat = 6000
#hyper_sampling_flat = 15
#hyper_sampling_flat = 0.000001
# time sampling density for window functions (Very important! Can be chosen different for normal, line-of sight, and bessel contributions) 
#selection_sampling = 100
#selection_sampling = 40
#selection_sampling_bessel = 100
#selection_sampling_bessel = 2
#selection_sampling_bessel_los = 10
# q step sizes (for j_l(q*chi))
#q_linstep = 200.0
#q_linstep = 10.0
#q_linstep = 0.001
#q_logstep_spline = 100.0
#q_logstep_spline = 50.0
#q_logstep_spline = 0.05
#q_logstep_lss = 100.0
#q_logstep_lss = 50.0
#q_logstep_lss = 0.05
# Trnasition from linstep to logstep regime
#q_numstep_transition = 250.0
# For the j_l(x) calculation, what is the value below which we ignore j_l(x) --> No big influence
#hyper_x_min = 1.0e-8
#hyper_x_tol = 1.0e-7

## 20) Matter module (FFTlog) flags (chi = conformal distance)
#> The below values are tuned for medium accuracy, medium speed. See arxiv:1807.09540 for 'faster' values. 
#> Turn the option 'matter_compare_spectra' to 'yes', if you want to see what kind of speedup this method gives. Then, CLASS will compute the nCl/sCl both in the original method and in the new FFTlog method. You will see that the new method is much faster after all. Then you ought to use the values in arxiv:1807.09540 for 19) and 20) to have the fairest comparison. Note that the comparison was done with LIMBER OFF, and a somewhat higher k_max_tau0_over_l_max_lss of around 100.
#> If you want more options than the below, look into the matter_init function of the code, there are some hardcoded options there. These are usually not recommended and thus not listed here
matter_activate = yes                               # Activate the module? (default: yes)
matter_compare_spectra = no                         # Activate old module at same time? (default: no)
matter_uses_separability = yes                      # Use separability approximation? (default: yes)
matter_uses_intchi_interpolation = yes              # Interpolate integrals over chi (default: yes)
matter_uses_intchi_symmetrization = yes             # Symmetrize integrals over chi (default: yes)
matter_uses_intchi_asymptotic = no                  # Divide out asymptotic form of window functions (default: no) # A bit numerically unstable
matter_uses_bessel_store = yes                      # Store bessel functions at selected l values? (default: yes)
matter_tw_size = 100 #25                            # Window function time sampling size for normal contributions (default: 100)
matter_integrated_tw_size = 150 #75                 # Window function time sampling size for integrated contributions (defualt: 150)
matter_t_spline_size = 120                          # Number of t values for f^ij_n(t) before splining
matter_t_size = 250                                 # Number of t values for f^ij_n(t) after splining
matter_fft_size = 120                               # Number of FFTlog coefficients c_n
matter_tau_size_max = 100                           # Number of tau values for the source functions
matter_k_weight_kmin = 0.1                          # Minimal k value for scale-independent growth factor for seperability approach
matter_k_weight_kmax = 10                           # Maximal k value for scale-independent growth factor for seperability approach
matter_k_max_extrapolation= 1000.0                  # Maximal k value for extrapolation of the source function (!)
matter_window_preparation_size=1800                 # Number of time values in the pre-calculation stage of the window functions for normal contributions
matter_integrated_window_preparation_size=2400      # Number of time values in the pre-calculation stage of the window functions for integrated contributions
matter_bi_sample_size=300                           # Number of t values in the I_l(nu,t) calculation
matter_bessel_imag_offset = 1.e-6                   # Since I_l(nu=Real,t) is partiall unstable, small imaginary offset that then means we have nu = nu_real + (nu_imag+epsilon)* i, where nu_real = tilt = b, nu_imag = 2*pi*m/(log(kmax)-log(kmin)) with m from 0...matter_fft_size
matter_t_offset=1.e-7                               # Small offset from 0 for t, if e.g. we take log(t) to integrate over
matter_chi_offset=1.e-10                            # Small offset from 0 for chi, if e.g. we take log(chi) to integrate over



## 21) Output folder
root = output/myoutput_


## 22) Verbosity
#if 'bessel file' set to something containing the letters 'y' or 'Y', the code tries to read bessel functions in a file; if the file is absent or not adequate, bessel functions are computed and written in a file. The file name is set by defaut to 'bessels.dat' but can be changed together with precision parameters: just set 'bessel_file_name' to '<name>' either here or in the precision parameter file. 
bessel file = yes
format = class #or CAMB
write parameters = yeap
headers = yes
background_verbose = 1
thermodynamics_verbose = 1
perturbations_verbose = 1
bessels_verbose = 1
transfer_verbose = 3
primordial_verbose = 2
spectra_verbose = 2
nonlinear_verbose = 1
lensing_verbose = 1
input_verbose = 1
output_verbose = 1
matter_verbose = 2
